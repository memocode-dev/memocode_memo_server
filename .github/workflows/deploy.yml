name: deloy

on:
  push:
    branches:
      - dev

permissions: write-all

jobs:
  tag:
    outputs:
      tag_name: ${{ steps.tag_version.outputs.new_tag }}
      release_name: Release ${{ steps.tag_version.outputs.new_tag }}
      body: ${{ steps.tag_version.outputs.changelog }}
    name: 태그 생성
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
  docker:
    name: 도커 이미지 빌드와 푸시
    runs-on: ubuntu-latest
    needs: tag
    steps:
      - uses: actions/checkout@v3
      - name: Docker Buildx 설치
        uses: docker/setup-buildx-action@v2
      - name: Docker Hub 로그인
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: memocode-dev
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 빌드 앤 푸시
        uses: docker/build-push-action@v3
        with:
          file: Dockerfile-api-server
          context: .
          push: true
          tags: |
            ghcr.io/memocode-dev/memocode_memo_server:${{ needs.tag.outputs.tag_name }}
            ghcr.io/memocode-dev/memocode_memo_server:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
  release:
    name: release 생성
    runs-on: ubuntu-latest
    needs: [ docker, tag ]
    steps:
      - uses: actions/checkout@v3
      - name: Create a GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.tag.outputs.tag_name }}
          release_name: ${{ needs.tag.outputs.release_name }}
          body: ${{ needs.tag.outputs.body }}
  deploy:
    runs-on: ubuntu-latest
    needs: [ release, tag ]
    steps:
      - uses: actions/checkout@v3
      - name: install kubectl
        run: |
          curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.28.5/2024-01-04/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$HOME/bin:$PATH
      - name: install aws-iam-authenticator
        run: |
          curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/aws-iam-authenticator
          chmod +x ./aws-iam-authenticator
          sudo mv ./aws-iam-authenticator /usr/local/bin
          aws-iam-authenticator version
      - name: install-aws-cli-action
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_DEV_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_DEV_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.DEV_MEMOCODE_KUBE_CONFIG }}
      - name: 버전 변경
        run: |
          kubectl version
      - name: 버전 변경
        run: |
          kubectl set image deployment/dev-memocode-memo-server spring-boot=ghcr.io/memocode-dev/memocode_memo_server:${{ needs.tag.outputs.tag_name }} --namespace=dev